{"version":3,"file":"static/js/208.b78db21b.chunk.js","mappings":"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","sources":["surveys/survey03_julio_22/AnswersTable.tsx","surveys/survey03_julio_22/Graph.tsx","surveys/survey03_julio_22/GraphAnswer2.tsx","surveys/survey03_julio_22/Survey3Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { AnswersTableProps, SurveyAnswer } from \"./Interfaces\";\r\n\r\nconst AnswersTable = (props: AnswersTableProps) => {\r\n  const [answersFiltered, setAnswersFiltered] = useState<SurveyAnswer[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n  const [direction, setDirection] = useState<string>(\"ASC\");\r\n\r\n  useEffect(() => {\r\n    setAnswersFiltered(props.answers);\r\n  }, [props]);\r\n\r\n  const options: { value: string; text: string }[] = [];\r\n\r\n  props.answers.forEach((e) => {\r\n    let op = options.find((x) => x.value === e.option);\r\n\r\n    if (!op) {\r\n      options.push({ value: e.option, text: e.optionText });\r\n    }\r\n  });\r\n  options.sort((a, b) => (a.value > b.value ? 1 : a.value < b.value ? -1 : 0));\r\n\r\n  const search = (str: string) => {\r\n    setSearchTerm(str);\r\n    setAnswersFiltered(\r\n      props.answers.filter(\r\n        (e) => e.answer.toLowerCase().indexOf(str.toLowerCase()) !== -1,\r\n      ),\r\n    );\r\n  };\r\n\r\n  const sort = () => {\r\n    setAnswersFiltered(\r\n      answersFiltered.sort((a, b) => {\r\n        if (direction === \"DATE\") {\r\n          return a.createdAt.localeCompare(b.createdAt);\r\n        }\r\n\r\n        if (a.score! < b.score!) {\r\n          return direction === \"ASC\" ? -1 : 1;\r\n        }\r\n        if (a.score! > b.score!) {\r\n          return direction === \"ASC\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      }),\r\n    );\r\n\r\n    setDirection(\r\n      direction === \"ASC\" ? \"DESC\" : direction === \"DESC\" ? \"DATE\" : \"ASC\",\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full mx-auto\">\r\n      <div className=\"flex justify-between mb-2\">\r\n\r\n        <div className=\"relative  \">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n            <svg\r\n              className=\"w-5 h-5 text-gray-700\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={(e) => search(e.target.value)}\r\n            className=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-80 pl-10 p-2.5  shadow-sm\"\r\n            placeholder=\"Filtrar respuestas\"\r\n          />\r\n        </div>\r\n        <div className=\"flex items-end\">\r\n          <p className=\"text-sm font-medium\">\r\n            Resultados: <strong>{answersFiltered.length}</strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"inline-block rounded-lg border shadow-sm w-full\">\r\n        <table className=\"w-full text-sm text-left text-gray-700\">\r\n          <thead className=\"text-xs text-gray-700 bg-gray-100 \">\r\n            <tr>\r\n              <th scope=\"col\" className=\"text-sm font-medium px-2 py-2 w-8\">\r\n                <button onClick={sort}>Puntaje</button>\r\n              </th>\r\n              <th scope=\"col\" className=\"text-sm font-medium px-2 py-2 w-52\">\r\n                Opci√≥n\r\n              </th>\r\n              <th scope=\"col\" className=\"text-sm font-medium px-2 py-2\">\r\n              ¬øEn qu√© crees que podemos mejorar tu experiencia? (opcional)\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {answersFiltered.map((e) => (\r\n              <tr\r\n                className=\"bg-white text-gray-700 border-b text-justify hover:bg-gray-100\"\r\n                key={e.id}\r\n              >\r\n                <td className=\"p-2 font-bold text-center align-text-top\">{e.score}</td>\r\n                <td className=\"p-2 align-text-top text-left\">{e.optionText}</td>\r\n\r\n                <td className=\"p-2\">\r\n                  <Highlighter\r\n                    searchWords={[searchTerm]}\r\n                    autoEscape={true}\r\n                    textToHighlight={e.answer}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswersTable;\r\n","import {\r\n  Bar,\r\n  BarChart,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { GraphProps } from \"./Interfaces\";\r\n\r\nconst Graph = (props: GraphProps) => {\r\n  const total: { count: number; score: number; color: string }[] = [];\r\n\r\n  props.answers.forEach((e) => {\r\n    let score = total.find((x) => x.score === e.score);\r\n\r\n    if (!score) {\r\n      score = {\r\n        score: e.score!,\r\n        count: 0,\r\n        color: \"\",\r\n      };\r\n      total.push(score);\r\n    }\r\n\r\n    score.count++;\r\n  });\r\n\r\n  total.forEach((e) => {\r\n    if (e.score === 9 || e.score === 10) e.color = \"#15803c\";\r\n    if (e.score === 7 || e.score === 8) e.color = \"#ea5a0c\";\r\n    if (e.score >= 1 && e.score <= 6) e.color = \"#b91c1c\";\r\n  });\r\n\r\n  total.sort((a,b) => a.score - b.score);\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white opacity-90 rounded-lg shadow-sm px-4 py-2\">\r\n          <strong>{payload[0].value}</strong> -{\" \"}\r\n          {((payload[0].value * 100) / props.countTotal).toFixed(1)}%\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"text-sm\" height={200}>\r\n      <BarChart data={total}>\r\n        <Tooltip content={<CustomTooltip />} />\r\n\r\n        <Bar dataKey=\"count\" fill=\"#8884d8\">\r\n          {total.map((entry, index) => (\r\n            <Cell key={`cell-${entry.score}`} fill={entry.color} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <XAxis type=\"category\" dataKey=\"score\" interval={0} />\r\n        <YAxis type=\"number\" dataKey=\"count\" orientation=\"right\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import {\r\n  Bar,\r\n  BarChart,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { GraphProps } from \"./Interfaces\";\r\n\r\nconst GraphAnswer2 = (props: GraphProps) => {\r\n  const total: {\r\n    count: number;\r\n    option: string;\r\n    text: string;\r\n    color: string;\r\n  }[] = [];\r\n\r\n  props.answers.forEach((e) => {\r\n    let op = total.find((x) => x.option === e.option);\r\n\r\n    if (!op) {\r\n      op = {\r\n        option: e.option,\r\n        count: 0,\r\n        text: e.optionText,\r\n        color: e.score === 9 || e.score === 10 ? \"#15803c\" : \"#b91c1c\",\r\n      };\r\n      total.push(op);\r\n    }\r\n\r\n    op.count++;\r\n  });\r\n\r\n  total.sort((a, b) => b.count - a.count);\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white opacity-90 rounded-lg shadow-sm px-4 py-2\">\r\n          <p>{payload[0].payload.text}</p>\r\n          <strong>{payload[0].value}</strong> -{\" \"}\r\n          {((payload[0].value * 100) / props.countTotal).toFixed(1)}%\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"text-sm\">\r\n      <BarChart data={total} layout=\"vertical\">\r\n        <Tooltip content={<CustomTooltip />} />\r\n\r\n        <Bar dataKey=\"count\" fill=\"#8884d8\">\r\n          {total.map((entry, index) => (\r\n            <Cell key={`cell-${entry.count}`} fill={entry.color} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <YAxis\r\n          type=\"category\"\r\n          dataKey=\"text\"\r\n          width={300}\r\n          interval={0}\r\n          mirror\r\n          orientation=\"right\"\r\n          tick={{\r\n            fill: \"rgba(0, 0, 0)\",\r\n            //stroke: \"rgba(0, 0, 0)\",\r\n            //strokeWidth: \"2px\",\r\n            //strokeLinecap: \"butt\",\r\n            //strokeLinejoin: \"miter\",\r\n            fontSize: \"0.875rem\",\r\n            // paintOrder:\"stroke\"\r\n          }}\r\n        />\r\n        <XAxis type=\"number\" dataKey=\"count\" domain={[0, Math.round(total[0].count * 10/7)]} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default GraphAnswer2;\r\n","import AnswersTable from \"./AnswersTable\";\r\nimport Graph from \"./Graph\";\r\nimport GraphAnswer2 from \"./GraphAnswer2\";\r\nimport { SurveyAnswer } from \"./Interfaces\";\r\n\r\nconst answers: SurveyAnswer[] = require(\"./answers3.json\");\r\n\r\nconst Survey3Main = () => {\r\n  const answered = answers.filter((e) => e.score !== null);\r\n  const resp = answered.length;\r\n  const noResp = answers.length - resp;\r\n\r\n  const prom = answered.filter((e) => e.score === 9 || e.score === 10).length;\r\n  const neu = answered.filter((e) => e.score === 7 || e.score === 8).length;\r\n  const det = answered.filter((e) => e.score! >= 1 && e.score! <= 6).length;\r\n\r\n  const promedio =\r\n    answered.reduce((prev: number, e) => prev + e.score!, 0) / resp;\r\n\r\n  const npsScore = ((prom - det) / resp) * 100;\r\n\r\n  return (\r\n    <div className=\"max-w-screen-md lg:max-w-screen-lg mx-auto bg-gray-50 p-3\">\r\n      <div className=\"w-full py-5 px-4 text-gray-700 relative\">\r\n        <div className=\"w-full pb-4 text-2xl font-bold text-gray-700\">\r\n          CODERHOUSE APP - NPS Julio 2022\r\n        </div>\r\n        {/*\r\n        <div className=\"w-full py-0.5 text-sm font-normal text-gray-700 text-justify\">\r\n          - Seg√∫n tu experiencia usando la App, ¬øqu√© tan probable es que se la\r\n          recomiendes a otro estudiante?\r\n        </div>\r\n        */}\r\n\r\n        <table className=\" text-sm text-left text-gray-700 sm:col-span-4 col-span-12 sm:col-start-8 col-start-1\">\r\n          <tbody>\r\n            <tr className=\"text-gray-700\">\r\n              <td className=\"py-px font-bold\">Usuarios alcanzados</td>\r\n              <td className=\"py-px px-2\">{answers.length}</td>\r\n              <td></td>\r\n            </tr>\r\n            <tr className=\"text-gray-700\">\r\n              <td className=\"py-px font-bold\">Respuestas</td>\r\n              <td className=\"py-px px-2\">{resp}</td>\r\n              <td>{((resp * 100) / answers.length).toFixed(1)}%</td>\r\n            </tr>\r\n            <tr className=\"text-gray-700\">\r\n              <td className=\"py-px font-bold\">No responde</td>\r\n              <td className=\"py-px px-2\">{noResp}</td>\r\n              <td>{((noResp * 100) / answers.length).toFixed(1)}%</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"absolute right-0 top-0 text-xs\">\r\n          Actualizado: 28/07/2022 12:55\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full h-px bg-gray-200\"></div>\r\n\r\n      <div className=\"my-6 grid grid-cols-12\">\r\n        <p className=\"text-md font-medium px-2 py-2 col-span-12\">\r\n          Seg√∫n tu experiencia usando la App, ¬øqu√© tan probable es que se la\r\n          recomiendes a otro estudiante?\r\n        </p>\r\n        <div className=\"sm:col-span-6 col-span-12\">\r\n          <Graph answers={answered} countTotal={resp} />\r\n        </div>\r\n\r\n        <div className=\"sm:col-span-4 col-span-12 sm:col-start-8 col-start-1 align-middle flex flex-col justify-center content-start\">\r\n          <table className=\" text-sm text-left text-gray-700  mb-8\">\r\n            <tbody>\r\n              <tr className=\"h-4\"></tr>\r\n              <tr className=\"text-green-700\">\r\n                <td className=\"py-px font-bold\">Promotores</td>\r\n                <td className=\"py-px px-2\">{prom}</td>\r\n                <td>{((prom * 100) / resp).toFixed(1)}%</td>\r\n              </tr>\r\n              <tr className=\"text-orange-600\">\r\n                <td className=\"py-px font-bold\">Neutrales</td>\r\n                <td className=\"py-px px-2\">{neu}</td>\r\n                <td>{((neu * 100) / resp).toFixed(1)}%</td>\r\n              </tr>\r\n              <tr className=\"text-red-700\">\r\n                <td className=\"py-px font-bold\">Detractores</td>\r\n                <td className=\"py-px px-2\">{det}</td>\r\n                <td>{((det * 100) / resp).toFixed(1)}%</td>\r\n              </tr>\r\n              <tr className=\"h-4\"></tr>\r\n              <tr className=\"text-gray-700\">\r\n                <td className=\"py-px font-bold\">Puntaje NPS</td>\r\n                <td className=\"py-px px-2\">{npsScore.toFixed(1)}</td>\r\n                <td></td>\r\n              </tr>\r\n              <tr className=\"h-4\"></tr>\r\n              <tr className=\"text-gray-700\">\r\n                <td className=\"py-px font-bold\">Promedio</td>\r\n                <td className=\"py-px px-2\">{promedio.toFixed(2)}</td>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full h-px mb-6 bg-gray-200\"></div>\r\n\r\n      <div className=\"my-6 grid grid-cols-12\">\r\n        <p className=\"text-md font-medium px-2 py-2 col-span-12\">\r\n          ¬øCu√°l fue la raz√≥n principal por la que [tuviste/no tuviste] una buena\r\n          experiencia?\r\n        </p>\r\n        <div className=\"col-span-12 h-96\">\r\n          <GraphAnswer2 answers={answered} countTotal={resp} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-full h-px mb-6 bg-gray-200\"></div>\r\n\r\n      <AnswersTable answers={answered} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Survey3Main;\r\n"],"names":["props","useState","answersFiltered","setAnswersFiltered","searchTerm","setSearchTerm","direction","setDirection","useEffect","answers","options","forEach","e","find","x","value","option","push","text","optionText","sort","a","b","className","fill","viewBox","xmlns","fillRule","d","clipRule","type","onChange","str","target","filter","answer","toLowerCase","indexOf","placeholder","length","scope","onClick","createdAt","localeCompare","score","map","searchWords","autoEscape","textToHighlight","id","total","count","color","CustomTooltip","active","payload","label","countTotal","toFixed","ResponsiveContainer","height","BarChart","data","Tooltip","content","Bar","dataKey","entry","index","Cell","XAxis","interval","YAxis","orientation","op","layout","width","mirror","tick","fontSize","domain","Math","round","require","answered","resp","noResp","prom","neu","det","promedio","reduce","prev","npsScore"],"sourceRoot":""}