{"version":3,"file":"static/js/615.b54ea9e0.chunk.js","mappings":"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","sources":["surveys/survey07_may_23/AnswersTable.tsx","surveys/survey07_may_23/GraphCategories.tsx","surveys/survey07_may_23/GraphScore.tsx","surveys/survey07_may_23/Survey7Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { AnswersTableProps, Nps7Answer } from \"./Interfaces\";\r\n\r\nconst AnswersTable = (props: AnswersTableProps) => {\r\n    const [answersFiltered, setAnswersFiltered] = useState<Nps7Answer[]>([]);\r\n    const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n    const [direction, setDirection] = useState<string>(\"ASC\");\r\n\r\n    useEffect(() => {\r\n        setAnswersFiltered(props.answers);\r\n    }, [props]);\r\n\r\n    const search = (str: string) => {\r\n        setSearchTerm(str);\r\n        setAnswersFiltered(\r\n            props.answers.filter(\r\n                (e) => e.answer.toLowerCase().indexOf(str.toLowerCase()) !== -1,\r\n            ),\r\n        );\r\n    };\r\n\r\n    const sort = () => {\r\n        setAnswersFiltered(\r\n            answersFiltered.sort((a, b) => {\r\n                if (direction === \"DATE\") {\r\n                    return a.createdAt.localeCompare(b.createdAt);\r\n                }\r\n\r\n                if (a.score! < b.score!) {\r\n                    return direction === \"ASC\" ? -1 : 1;\r\n                }\r\n                if (a.score! > b.score!) {\r\n                    return direction === \"ASC\" ? 1 : -1;\r\n                }\r\n                return 0;\r\n            }),\r\n        );\r\n\r\n        setDirection(\r\n            direction === \"ASC\" ? \"DESC\" : direction === \"DESC\" ? \"DATE\" : \"ASC\",\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"mx-auto\">\r\n            <div className=\"flex justify-between mb-2\">\r\n\r\n                <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                        <svg\r\n                            className=\"w-5 h-5 text-gray-700\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                                clipRule=\"evenodd\"\r\n                            ></path>\r\n                        </svg>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => search(e.target.value)}\r\n                        className=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-80 pl-10 p-2.5  shadow-sm\"\r\n                        placeholder=\"Filtrar respuestas\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex items-end\">\r\n                    <p className=\"text-sm font-medium\">\r\n                        Resultados: <strong>{answersFiltered.length}</strong>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"rounded-lg border shadow-sm \">\r\n                <table className=\"table-fixed w-full text-sm text-left text-gray-700\">\r\n                    <thead className=\"text-xs text-gray-700 bg-gray-100 \">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"text-sm font-medium px-2 py-2 w-24\">\r\n                                <button onClick={sort}>Puntaje</button>\r\n                            </th>\r\n                            <th scope=\"col\" className=\"text-sm font-medium px-2 py-2 w-24\">\r\n                                App Version\r\n                            </th>\r\n                            <th scope=\"col\" className=\"text-sm font-medium px-2 py-2 w-64\">\r\n                                Categoría\r\n                            </th>\r\n                            <th scope=\"col\" className=\"text-sm font-medium px-2 py-2\">\r\n                                ¿En qué crees que podemos mejorar tu experiencia? (opcional)\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"w-64\">\r\n                        {answersFiltered.map((e) => (\r\n                            <tr\r\n                                className=\"bg-white text-gray-700 border-b text-justify hover:bg-gray-100\"\r\n                                key={e.id}\r\n                            >\r\n                                <td className=\"p-2 font-bold text-center align-text-top\">{e.score}</td>\r\n                                <td className=\"p-2 align-text-top text-left\">{e.appVersion}</td>\r\n                                <td className=\"p-2 align-text-top text-left\">{e.category}</td>\r\n                                <td className=\"p-2 align-text-top text-left\">\r\n                                    <Highlighter\r\n                                        searchWords={[searchTerm]}\r\n                                        autoEscape={true}\r\n                                        textToHighlight={e.answer}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnswersTable;\r\n","import {\r\n    Bar,\r\n    BarChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { GraphProps } from \"./Interfaces\";\r\n\r\ninterface CategoryI {\r\n    category: string;\r\n    promotor: number;\r\n    detractor: number;\r\n    neutral: number;\r\n    total: number;\r\n};\r\n\r\nconst GraphCategories = (props: GraphProps) => {\r\n    const categories: CategoryI[] = [];\r\n\r\n    props.answers.forEach((e) => {\r\n        let category = categories.find((x) => x.category === e.category);\r\n\r\n        if (!category) {\r\n            category = {\r\n                category: e.category,\r\n                promotor: 0,\r\n                detractor: 0,\r\n                neutral: 0,\r\n                total: 0,\r\n            };\r\n            categories.push(category);\r\n        }\r\n\r\n        if (e.score === 9 || e.score === 10) category.promotor++;\r\n        else if (e.score === 7 || e.score === 8) category.neutral++;\r\n        else category.detractor++;\r\n        category.total++;\r\n    });\r\n\r\n    categories.sort((a, b) => b.total - a.total);\r\n\r\n    const CustomTooltip = ({ active, payload, label }: any) => {\r\n        if (active && payload && payload.length) {\r\n            const category: CategoryI = payload[0].payload;\r\n\r\n            return (\r\n                <div className=\"bg-gray-200 opacity-90 rounded-lg shadow-sm px-4 py-2\">\r\n                    <p>{category.category}</p>\r\n                    <p className=\"mb-2\">\r\n                        <strong>{category.total}</strong> - {((category.total * 100) / props.countTotal).toFixed(1)}%\r\n                    </p>\r\n                    {category.promotor > 0 &&\r\n                        <p>\r\n                            Promotes: <strong>{category.promotor}</strong>\r\n                        </p>\r\n                    }\r\n                    {category.detractor > 0 &&\r\n                        <p>\r\n                            Detractores: <strong>{category.detractor}</strong>\r\n                        </p>\r\n                    }\r\n                    {category.neutral > 0 &&\r\n                        <p>\r\n                            Neutrales: <strong>{category.neutral}</strong>\r\n                        </p>\r\n                    }\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <ResponsiveContainer className=\"text-sm\">\r\n            <BarChart data={categories} layout=\"vertical\">\r\n                <Tooltip content={<CustomTooltip />} />\r\n\r\n                <Bar dataKey=\"promotor\" stackId=\"a\" fill=\"#15803c\" />\r\n                <Bar dataKey=\"detractor\" stackId=\"a\" fill=\"#b91c1c\" />\r\n                <Bar dataKey=\"neutral\" stackId=\"a\" fill=\"#ea5a0c\" />\r\n\r\n                <YAxis\r\n                    type=\"category\"\r\n                    dataKey=\"category\"\r\n                    width={300}\r\n                    interval={0}\r\n                    mirror\r\n                    orientation=\"right\"\r\n                    tick={{\r\n                        fill: \"rgba(0, 0, 0)\",\r\n                        //stroke: \"rgba(0, 0, 0)\",\r\n                        //strokeWidth: \"2px\",\r\n                        //strokeLinecap: \"butt\",\r\n                        //strokeLinejoin: \"miter\",\r\n                        fontSize: \"0.875rem\",\r\n                        // paintOrder:\"stroke\"\r\n                    }}\r\n                />\r\n                <XAxis\r\n                    type=\"number\"\r\n                    dataKey=\"total\"\r\n                    domain={[0, Math.round((categories[0].total * 10) / 7)]}\r\n                />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default GraphCategories;\r\n","import {\r\n  Bar,\r\n  BarChart,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { GraphProps } from \"./Interfaces\";\r\n\r\nconst GraphScore = (props: GraphProps) => {\r\n  const total: { count: number; score: number; color: string }[] = [];\r\n\r\n  props.answers.forEach((e) => {\r\n    let score = total.find((x) => x.score === e.score);\r\n\r\n    if (!score) {\r\n      score = {\r\n        score: e.score!,\r\n        count: 0,\r\n        color: \"\",\r\n      };\r\n      total.push(score);\r\n    }\r\n\r\n    score.count++;\r\n  });\r\n\r\n  total.forEach((e) => {\r\n    if (e.score === 9 || e.score === 10) e.color = \"#15803c\";\r\n    if (e.score === 7 || e.score === 8) e.color = \"#ea5a0c\";\r\n    if (e.score >= 1 && e.score <= 6) e.color = \"#b91c1c\";\r\n  });\r\n\r\n  total.sort((a,b) => a.score - b.score);\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white opacity-90 rounded-lg shadow-sm px-4 py-2\">\r\n          <strong>{payload[0].value}</strong> -{\" \"}\r\n          {((payload[0].value * 100) / props.countTotal).toFixed(1)}%\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"text-sm\" height={200}>\r\n      <BarChart data={total}>\r\n        <Tooltip content={<CustomTooltip />} />\r\n\r\n        <Bar dataKey=\"count\" fill=\"#8884d8\">\r\n          {total.map((entry, index) => (\r\n            <Cell key={`cell-${entry.score}`} fill={entry.color} />\r\n          ))}\r\n        </Bar>\r\n\r\n        <XAxis type=\"category\" dataKey=\"score\" interval={0} />\r\n        <YAxis type=\"number\" dataKey=\"count\" orientation=\"right\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default GraphScore;\r\n","import AnswersTable from \"./AnswersTable\";\r\nimport GraphCategories from \"./GraphCategories\";\r\nimport GraphScore from \"./GraphScore\";\r\nimport { Nps7Answer } from \"./Interfaces\";\r\n\r\nconst answers: Nps7Answer[] = require(\"./nps_may_2023.json\");\r\n\r\nconst Survey7Main = () => {\r\n\r\n    /// Filtro a los que saltearon la encuesta\r\n    const answered = answers.filter((e) => e.score !== null);\r\n\r\n    /// Contadores\r\n    const responseCount = answered.length;\r\n    const noResponseCount = answers.length - responseCount;\r\n\r\n    const promoterCount = answered.filter((e) => e.score === 9 || e.score === 10).length;\r\n    const neutralCount = answered.filter((e) => e.score === 7 || e.score === 8).length;\r\n    const detractorCount = answered.filter((e) => e.score! >= 1 && e.score! <= 6).length;\r\n\r\n    /// Promedio\r\n    const avg = answered.reduce((prev: number, e) => prev + e.score!, 0) / responseCount;\r\n\r\n    /// Puntaje nps\r\n    const npsScore = ((promoterCount - detractorCount) / responseCount) * 100;\r\n\r\n    return (\r\n        <div className=\"max-w-screen-md lg:max-w-screen-lg mx-auto bg-gray-50 p-3\">\r\n            <div className=\"w-full py-5 px-4 text-gray-700 relative\">\r\n                <div className=\"w-full pb-4 text-2xl font-bold text-gray-700\">\r\n                    CODERHOUSE APP - NPS Mayo 2023\r\n                </div>\r\n\r\n                <table className=\" text-sm text-left text-gray-700 sm:col-span-4 col-span-12 sm:col-start-8 col-start-1\">\r\n                    <tbody>\r\n                        <tr className=\"text-gray-700\">\r\n                            <td className=\"py-px font-bold\">Usuarios alcanzados</td>\r\n                            <td className=\"py-px px-2\">{answers.length}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr className=\"text-gray-700\">\r\n                            <td className=\"py-px font-bold\">Respuestas</td>\r\n                            <td className=\"py-px px-2\">{responseCount}</td>\r\n                            <td>{((responseCount * 100) / answers.length).toFixed(1)}%</td>\r\n                        </tr>\r\n                        <tr className=\"text-gray-700\">\r\n                            <td className=\"py-px font-bold\">No responde</td>\r\n                            <td className=\"py-px px-2\">{noResponseCount}</td>\r\n                            <td>{((noResponseCount * 100) / answers.length).toFixed(1)}%</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <div className=\"absolute right-0 top-0 text-xs\">\r\n                    Actualizado: 17/5/2023 14:44\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"w-full h-px bg-gray-200\"></div>\r\n\r\n            <div className=\"my-6 grid grid-cols-12\">\r\n                <p className=\"text-md font-medium px-2 py-2 col-span-12\">\r\n                    Según tu experiencia usando la App, ¿qué tan probable es que se la\r\n                    recomiendes a otro estudiante?\r\n                </p>\r\n                <div className=\"sm:col-span-6 col-span-12\">\r\n                    <GraphScore answers={answered} countTotal={responseCount} />\r\n                </div>\r\n\r\n                <div className=\"sm:col-span-4 col-span-12 sm:col-start-8 col-start-1 align-middle flex flex-col justify-center content-start\">\r\n                    <table className=\" text-sm text-left text-gray-700  mb-8\">\r\n                        <tbody>\r\n                            <tr className=\"h-4\"></tr>\r\n                            <tr className=\"text-green-700\">\r\n                                <td className=\"py-px font-bold\">Promotores</td>\r\n                                <td className=\"py-px px-2\">{promoterCount}</td>\r\n                                <td>{((promoterCount * 100) / responseCount).toFixed(1)}%</td>\r\n                            </tr>\r\n                            <tr className=\"text-orange-600\">\r\n                                <td className=\"py-px font-bold\">Neutrales</td>\r\n                                <td className=\"py-px px-2\">{neutralCount}</td>\r\n                                <td>{((neutralCount * 100) / responseCount).toFixed(1)}%</td>\r\n                            </tr>\r\n                            <tr className=\"text-red-700\">\r\n                                <td className=\"py-px font-bold\">Detractores</td>\r\n                                <td className=\"py-px px-2\">{detractorCount}</td>\r\n                                <td>{((detractorCount * 100) / responseCount).toFixed(1)}%</td>\r\n                            </tr>\r\n                            <tr className=\"h-4\"></tr>\r\n                            <tr className=\"text-gray-700\">\r\n                                <td className=\"py-px font-bold\">Puntaje NPS</td>\r\n                                <td className=\"py-px px-2\">{npsScore.toFixed(1)}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr className=\"h-4\"></tr>\r\n                            <tr className=\"text-gray-700\">\r\n                                <td className=\"py-px font-bold\">Promedio</td>\r\n                                <td className=\"py-px px-2\">{avg.toFixed(2)}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-px mb-6 bg-gray-200\"></div>\r\n\r\n            <div className=\"my-6 grid grid-cols-12\">\r\n                <p className=\"text-md font-medium px-2 py-2 col-span-12\">\r\n                    ¿Cuál fue la razón principal por la que [tuviste/no tuviste] una buena\r\n                    experiencia?\r\n                </p>\r\n                <div className=\"col-span-12 h-96\">\r\n                    <GraphCategories answers={answered} countTotal={responseCount} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-px mb-6 bg-gray-200\"></div>\r\n\r\n            <AnswersTable answers={answered} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Survey7Main;\r\n"],"names":["props","useState","answersFiltered","setAnswersFiltered","searchTerm","setSearchTerm","direction","setDirection","useEffect","answers","className","fill","viewBox","xmlns","fillRule","d","clipRule","type","value","onChange","e","str","target","filter","answer","toLowerCase","indexOf","placeholder","length","scope","onClick","sort","a","b","createdAt","localeCompare","score","map","appVersion","category","searchWords","autoEscape","textToHighlight","id","categories","forEach","find","x","promotor","detractor","neutral","total","push","CustomTooltip","active","payload","label","countTotal","toFixed","ResponsiveContainer","BarChart","data","layout","Tooltip","content","Bar","dataKey","stackId","YAxis","width","interval","mirror","orientation","tick","fontSize","XAxis","domain","Math","round","count","color","height","entry","index","Cell","require","answered","responseCount","noResponseCount","promoterCount","neutralCount","detractorCount","avg","reduce","prev","npsScore"],"sourceRoot":""}